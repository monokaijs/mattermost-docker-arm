name: Package and release
on:
  push:
    branches:
      - main
      - support-**
  pull_request:
    branches:
      - main
      - support-**

env:
  DEBIAN_RELEASE: bookworm
  DOCKER_PWD: /root
  DOCKER_IMAGE: debian:${DEBIAN_RELEASE}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        include:
          - os: linux
            arch: arm
          - os: linux
            arch: arm64

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set environment from runtime properties
        run: |
          cat mattermost-release.txt >> $GITHUB_ENV

      - name: Pull docker image
        run: 'docker pull "${{ env.DOCKER_IMAGE }}"'

      - name: Build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: docker run --mount="type=bind,source=$PWD,destination=${{ env.DOCKER_PWD }}" --rm=true --tty=true --workdir="${{ env.DOCKER_PWD }}" -e DEBIAN_RELEASE -e MATTERMOST_VERSION -e MMCTL_RELEASE -e MM_FOCALBOARD_RELEASE -e GOOS -e GOARCH -e GO_VERSION "${{ env.DOCKER_IMAGE }}" ./build.sh

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mattermost-${{ env.MATTERMOST_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            mattermost-${{ env.MATTERMOST_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            mattermost-${{ env.MATTERMOST_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz.sha512sum

      - name: Tag release
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref,'refs/heads/support-') }}
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ env.MATTERMOST_VERSION }}',
              sha: context.sha
            })

      - name: Create Github release
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref,'refs/heads/support-') }}
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ env.MATTERMOST_VERSION }}
          files: |
            mattermost-${{ env.MATTERMOST_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            mattermost-${{ env.MATTERMOST_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz.sha512sum

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref,'refs/heads/support-') }}
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - os: linux
            arch: arm
          - os: linux
            arch: arm64

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set environment from runtime properties
        run: |
          cat mattermost-release.txt >> $GITHUB_ENV

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: mattermost-${{ env.MATTERMOST_VERSION }}-${{ matrix.os }}-${{ matrix.arch }}
          path: ./app/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ env.MATTERMOST_VERSION }}-${{ matrix.arch }}
            type=raw,value=latest-${{ matrix.arch }},enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MM_VERSION=${{ env.MATTERMOST_VERSION }}
            TARGETOS=${{ matrix.os }}
            TARGETARCH=${{ matrix.arch }}

